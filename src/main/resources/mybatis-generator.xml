<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties resource="jdbc.properties" />

    <!-- id: 用来唯一确定一个<context>元素，该id属性可以在运行MBG的使用 -->
    <!-- defaultModelType: 这个属性定义了MBG如何生成实体类
            flat:该模型为每一张表只生成一个实体类。这个实体类包含表中的所有字段。
    -->
    <!-- targetRuntime: 此属性用于指定生成的代码的运行时环境 -->
    <context id="MySql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="${mybatis.MyMapper}" />
            <!--caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true-->
            <property name="caseSensitive" value="true" />
        </plugin>

        <!-- 阻止生成自动注释 -->
        <commentGenerator>
            <property name="javaFileEncoding" value="UTF-8" />
            <!-- 阻止生成注释，默认为false -->
            <property name="suppressDate" value="true" />
            <!-- 阻止生成的注释包含时间戳，默认为false -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        
        <jdbcConnection driverClass="${datasource.driverClassName}"
                        connectionURL="${datasource.url}"
                        userId="${datasource.username}"
                        password="${datasource.password}" />

        <!-- 这个元素的配置用来指定JDBC类型和Java类型如何转换。 -->
        <javaTypeResolver>
            <!-- 该属性可以控制是否强制DECIMAL和NUMERIC类型的字段转换为Java类型的java.math.BigDecimal,
                 默认值为false，一般不需要配置 -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="${mybatis-model.location}" targetProject="src/main/java">
            <property name="enableSubPackages" value="true" />
            <!-- 是否对数据库查询结果进行trim操作 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="${mybatis-mapper-xml.location}">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!--生成Dao类存放位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${mybatis-dao.location}"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名
        去掉Mybatis Generator生成的一堆 example
       -->
        <table tableName="t_user" domainObjectName="User"
               enableCountByExample="false" enableDeleteByExample="false"
               enableUpdateByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table>
        <table tableName="t_role" domainObjectName="Role"
               enableCountByExample="false" enableDeleteByExample="false"
               enableUpdateByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <!-- 这个元素用来指定自动生成主键的属性（identity字段或者sequences序列）。
                如果指定这个元素，MBG在生成insert的SQL映射文件中插入一个<selectKey>元素。 -->
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
        </table>
    </context>
</generatorConfiguration>